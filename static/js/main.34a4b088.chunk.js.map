{"version":3,"sources":["components/game/FinishScore.js","components/card/index.js","components/game/index.js","actions/cards.js","actions/types.js","components/horizontal/index.js","reducers/cards.js","store.js","App.js","serviceWorker.js","index.js"],"names":["FinishScore","props","cards","stop","pointsEnemy","points","className","style","border","onClick","resetDeck","Card","type","left","top","src","process","alt","connect","state","dispatch","addCard","addCardEnemy","contCard","contCardEnemy","leftDist","interval","setTimeout","deckGame","map","card","key","deckEnemy","clearInterval","color","games","winGames","initialState","cont","deck","action","isNaN","parseInt","sort","Math","random","store","createStore","combineReducers","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.34a4b088.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FinishScore = ({ props }) => {\n  return (props.cards.stop &&\n    props.cards.pointsEnemy > props.cards.points &&\n    props.cards.pointsEnemy <= 7.5) ||\n    props.cards.points > 7.5 ? (\n    <div\n      className=\"cartelInfo\"\n      style={{ border: \"1vh solid red\" }}\n      onClick={() => props.resetDeck()}\n    >\n      Has Perdido\n    </div>\n  ) : props.cards.stop && props.cards.pointsEnemy > 7.5 ? (\n    <div\n      className=\"cartelInfo\"\n      style={{ border: \"1vh solid green\" }}\n      onClick={() => props.resetDeck()}\n    >\n      Has Ganado\n    </div>\n  ) : props.cards.pointsEnemy === props.cards.points &&\n    props.cards.pointsEnemy === 7.5 ? (\n    <div\n      className=\"cartelInfo\"\n      style={{ border: \"1vh solid grey\" }}\n      onClick={() => props.resetDeck()}\n    >\n      Empate\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default FinishScore;\n","import React from 'react'\r\nimport './css/card.css'\r\n\r\nconst Card = ({ type, left, top }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='style' style={{left: `${left}%`, top: `${top}px`}}>\r\n        <img src={`${process.env.PUBLIC_URL}/cards/${type}.svg`} alt='card' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FinishScore from \"./FinishScore\";\r\nimport Card from \"../card\";\r\nimport { addCard, resetDeck, stop, addCardEnemy } from \"../../actions/cards\";\r\nimport \"./css/game.css\";\r\n\r\nconst Game = (props) => {\r\n  let contCard = 0;\r\n  let contCardEnemy = 0;\r\n  const leftDist = () => contCard++ * 5;\r\n  const leftDistEnemy = () => contCardEnemy++ * 5;\r\n\r\n  let interval = (props) => setTimeout(() => props.addCardEnemy(), 1000);\r\n\r\n  return (\r\n    <div>\r\n      <FinishScore props={props} />\r\n      {!props.cards.stop ? (\r\n        props.cards.deckGame.map((card) => (\r\n          <Card key={contCard} type={card} left={leftDist()} top={50} />\r\n        ))\r\n      ) : (\r\n        <div>\r\n          {props.cards.deckGame.map((card) => (\r\n            <Card key={contCard} type={card} left={leftDist()} top={50} />\r\n          ))}\r\n          {props.cards.deckEnemy.map((card) => (\r\n            <Card key={contCardEnemy*1000} type={card} left={leftDistEnemy()} top={200} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {props.cards.points < 7.5 && !props.cards.stop ? (\r\n        <div>\r\n          <div onClick={() => props.addCard()}>\r\n            <Card key={contCard} type={\"bc\"} left={leftDist()} top={50} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {props.cards.pointsEnemy > props.cards.points ||\r\n          props.cards.pointsEnemy >= 7.5 ||\r\n          props.cards.points > 7.5 ? (\r\n            <div>\r\n              {clearInterval(interval)}\r\n            </div>\r\n          ) : (\r\n            <div style={{color: \"white\"}}>\r\n              {interval(props)}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ...state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addCard: () => dispatch(addCard()),\r\n  resetDeck: () => dispatch(resetDeck()),\r\n  stop: () => dispatch(stop()),\r\n  addCardEnemy: () => dispatch(addCardEnemy()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","import { ADD_CARD, RESET_DECK, STOP, ADD_CARD_ENEMY } from './types'\r\n\r\nexport const addCard = () => ({\r\n  type: ADD_CARD\r\n})\r\n\r\nexport const resetDeck = () => ({\r\n  type: RESET_DECK\r\n})\r\n\r\nexport const stop = () => ({\r\n  type: STOP\r\n})\r\n\r\nexport const addCardEnemy = () => ({\r\n  type: ADD_CARD_ENEMY\r\n})\r\n\r\n","export const ADD_CARD= 'ADD_CARD'\r\nexport const RESET_DECK = 'RESET_DECK'\r\nexport const STOP = 'STOP'\r\nexport const ADD_CARD_ENEMY = 'ADD_CARD_ENEMY'","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetDeck, stop } from \"../../actions/cards\";\r\nimport \"./css/horizontal.css\";\r\n\r\nconst Horizontal = (props) => {\r\n  return (\r\n    <div className=\"horizontal\">\r\n      <div className=\"titulo\">Siete y Media</div>\r\n      {props.cards.points > 0 &&\r\n        props.cards.points < 7.5 &&\r\n        !props.cards.stop && (\r\n          <button className=\"button\" onClick={() => props.stop()}>Plantarse</button>\r\n        )}\r\n      <div className=\"resultado\">\r\n        <div>Partidas: {props.cards.games}</div>\r\n        <div>Ganadas: {props.cards.winGames}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ...state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  resetDeck: () => dispatch(resetDeck()),\r\n  stop: () => dispatch(stop()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Horizontal);\r\n","import { ADD_CARD, RESET_DECK, STOP, ADD_CARD_ENEMY } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  cont: 0,\r\n  points: 0,\r\n  games: 0,\r\n  winGames: 0,\r\n  deckGame: [],\r\n  deckEnemy: [],\r\n  pointsEnemy: 0,\r\n  stop: false,\r\n  deck: [\r\n    \"h1\",\r\n    \"h2\",\r\n    \"h3\",\r\n    \"h4\",\r\n    \"h5\",\r\n    \"h6\",\r\n    \"h7\",\r\n    \"hj\",\r\n    \"hq\",\r\n    \"hk\",\r\n    \"c1\",\r\n    \"c2\",\r\n    \"c3\",\r\n    \"c4\",\r\n    \"c5\",\r\n    \"c6\",\r\n    \"c7\",\r\n    \"cj\",\r\n    \"cq\",\r\n    \"ck\",\r\n    \"d1\",\r\n    \"d2\",\r\n    \"d3\",\r\n    \"d4\",\r\n    \"d5\",\r\n    \"d6\",\r\n    \"d7\",\r\n    \"dj\",\r\n    \"dq\",\r\n    \"dk\",\r\n    \"s1\",\r\n    \"s2\",\r\n    \"s3\",\r\n    \"s4\",\r\n    \"s5\",\r\n    \"s6\",\r\n    \"s7\",\r\n    \"sj\",\r\n    \"sq\",\r\n    \"sk\",\r\n  ],\r\n};\r\n\r\nconst cards = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        cont: state.cont + 1,\r\n        deckGame: [...state.deckGame, state.deck[state.cont]],\r\n        points:\r\n          state.points +\r\n          (!isNaN(state.deck[state.cont][1])\r\n            ? parseInt(state.deck[state.cont][1])\r\n            : 0.5),\r\n      };\r\n    case RESET_DECK:\r\n      return {\r\n        ...state,\r\n        cont: 0,\r\n        deck: state.deck.sort(function () {\r\n          return Math.random() - 0.5;\r\n        }),\r\n        deckGame: [],\r\n        deckEnemy: [],\r\n        points: 0,\r\n        pointsEnemy: 0,\r\n        stop: false,\r\n        winGames:\r\n          (state.points < 8 &&\r\n          state.pointsEnemy > 7.5) ?\r\n          state.winGames + 1 : state.winGames,\r\n        games: state.games + 1,\r\n      };\r\n    case ADD_CARD_ENEMY:\r\n      return {\r\n        ...state,\r\n        cont: state.cont + 1,\r\n        stop: true,\r\n        deckEnemy: [...state.deckEnemy, state.deck[state.cont]],\r\n        pointsEnemy:\r\n          state.pointsEnemy +\r\n          (!isNaN(state.deck[state.cont][1])\r\n            ? parseInt(state.deck[state.cont][1])\r\n            : 0.5),\r\n      };\r\n    case STOP:\r\n      return {\r\n        ...state,\r\n        cont: state.cont + 1,\r\n        pointsEnemy:\r\n          state.pointsEnemy +\r\n          (!isNaN(state.deck[state.cont][1])\r\n            ? parseInt(state.deck[state.cont][1])\r\n            : 0.5),\r\n        deckEnemy: [...state.deckEnemy, state.deck[state.cont]],\r\n        stop: true,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n        deck: state.deck.sort(function () {\r\n          return Math.random() - 0.5;\r\n        }),\r\n      };\r\n  }\r\n};\r\n\r\nexport default cards;\r\n","import { createStore, combineReducers } from 'redux'\r\nimport cards from './reducers/cards'\r\n\r\nconst store = createStore(\r\n  combineReducers({ cards })\r\n)\r\n\r\nexport default store","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport Game from \"./components/game\";\r\n// import Dashboard from \"./components/dashboard\";\r\nimport Horizontal from \"./components/horizontal\";\r\nimport store from \"./store\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        {/* <Dashboard /> */}\r\n        <Horizontal />\r\n        <Game />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}